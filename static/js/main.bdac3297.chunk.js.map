{"version":3,"sources":["Components/MenuItem.js","Components/InputField.js","Components/Menu.js","Components/Note.js","Components/Notes.js","App.js","index.js"],"names":["MenuItem","props","useState","active","setActive","className","onClick","e","preventDefault","switchCategory","text","onMouseEnter","onMouseLeave","InputField","value","setValue","onSubmit","addCategory","type","onChange","target","Menu","categories","forEach","category","push","key","Math","random","renderCategories","Note","handleClickDelete","removeNote","index","titleEditToggle","editingTitle","state","title","setState","titleInput","textEditToggle","editingText","editNoteText","textInput","handleTitleChange","handleTitleSubmit","editNoteTitle","handleTextChange","handleTextSubmit","this","maxLength","aria-label","React","Component","Notes","currentCategory","removeCategory","notes","note","renderNotes","saveNotes","addNote","App","componentDidMount","allNotes","JSON","parse","localStorage","getItem","selectedCategory","window","confirm","subject","body","alert","splice","shift","getNotes","selectedNotes","setItem","stringify","General","Object","keys","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bdac3297.chunk.js","sourcesContent":["/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, {useState} from 'react';\n\nconst MenuItem = (props) => {\n    \n    const [active, setActive] = useState('');\n\n    const handleClick = (e) => {\n        e.preventDefault();\n        props.switchCategory(props.text);\n    }\n\n    return(\n        <li className={active}\n        onClick={handleClick}\n        onMouseEnter={() => setActive('is-active')}\n        onMouseLeave={() => setActive('')}>\n        <a>{props.text}</a></li>\n    )\n}\n\nexport default MenuItem;","import React, {useState} from 'react';\n\nconst InputField = (props) => {\n\n    const [value, setValue] = useState('');\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        props.addCategory(value);\n        setValue('');\n    }\n\n    return(\n        <div className='my-menu-input-field'>\n            <form onSubmit={handleSubmit}>\n                <label className='has-text-white'>Add a Category:</label>\n                <input type=\"text\" onChange={(e) => setValue(e.target.value)} value={value}\n                className=\"input is-primary\" />\n            </form>\n        </div>\n    )\n}\n\nexport default InputField","import React from 'react';\nimport MenuItem from './MenuItem';\nimport InputField from './InputField';\n\nfunction Menu(props) {\n    const renderCategories = () => {\n        const categories = []\n        props.categories.forEach(category => {\n            categories.push(<MenuItem key={Math.random()} text={category} switchCategory={props.switchCategory} />)\n        })\n        return categories\n    }\n\n    return(\n        <div className='my-menu'>\n            <aside>\n                <p className=\"menu-label my-menu-label\">Categories</p>\n                <ul className=\"menu-list\">\n                    {renderCategories()}\n                </ul>\n            </aside>\n            <InputField addCategory={props.addCategory} />\n        </div>\n    )\n}\n\nexport default Menu;","import React from 'react';\n\nclass Note extends React.Component {\n    constructor(){\n        super();\n        this.state={\n            editingTitle : false,\n            editingText : false,\n            titleInput : '',\n            textInput : '',\n        }\n    }\n\n    handleClickDelete = (e) => {\n        e.preventDefault();\n        this.props.removeNote(this.props.index);\n    }\n\n    titleEditToggle = (e) => {\n        e.preventDefault();\n        const editingTitle = this.state.editingTitle;\n        if (this.props.title) {\n            this.setState({\n                titleInput : this.props.title,\n            })\n        }\n        this.setState({\n            editingTitle : !editingTitle,\n        })\n    }\n\n    textEditToggle = (e) => {\n        e.preventDefault();\n        const editingText = this.state.editNoteText;\n        if (this.props.text) {\n            this.setState({\n                textInput : this.props.text\n            })\n        }\n        this.setState({\n            editingText : !editingText\n        })\n    }\n\n    handleTitleChange = (e) => {\n        this.setState({\n            titleInput : e.target.value\n        })\n    }\n\n    handleTitleSubmit = (e) => {\n        e.preventDefault();\n        this.props.editNoteTitle(this.props.index, this.state.titleInput);\n    }\n\n    handleTextChange = (e) => {\n        this.setState({\n            textInput : e.target.value\n        })\n    }\n\n    handleTextSubmit = (e) => {\n        e.preventDefault();\n        this.props.editNoteText(this.props.index, this.state.textInput);\n    }\n\n    render() {\n        return(\n            <div className=''>\n                <article className=\"message is-primary my-note\">\n                    <div className=\"message-body has-text-black my-message\">\n                        <div className='level my-note-title'>\n                            {this.state.editingTitle ? (<form onSubmit={this.handleTitleSubmit}>\n                            <input type=\"text\" onChange={this.handleTitleChange} value={this.state.titleInput}\n                            className=\"input is-primary is-small\" maxLength={50} /></form>) : <p>{this.props.title}</p>}\n                            <div>\n                                <span className=\"icon\">\n                                    <i onClick={this.titleEditToggle} className=\"fa fa-edit\"></i>\n                                </span>\n                                <button onClick={this.handleClickDelete} className=\"delete\" aria-label=\"delete\"></button>\n                            </div>\n                        </div>\n                        {this.state.editingText ? (<textarea onChange={this.handleTextChange} value={this.state.textInput}\n                        className=\"input is-primary my-text-field\" />) : this.props.text}\n                        <p>\n                            {!this.state.editingText ? \n                            (<span className='icon'>\n                                <i onClick={this.textEditToggle} className='fa fa-edit'></i>\n                            </span>) :\n                            (<span className='icon'>\n                                <i onClick={this.handleTextSubmit} className='fa fa-check'></i>\n                            </span>)}\n                        </p>\n                    </div>\n                </article>\n            </div>\n        )\n    }\n}\n\nexport default Note;","import React from 'react';\nimport Note from './Note';\n\nfunction Notes(props) {\n    const renderNotes = () => {\n        const notes = []\n        props.notes.forEach((note, index) => {\n            notes.push(\n                <Note key={Math.random()} index={index} title={note[0]} text={note[1]} \n                editNoteTitle={props.editNoteTitle} removeNote={props.removeNote}\n                editNoteText={props.editNoteText} />\n            )\n        })\n        return notes;\n    }\n\n    return(\n        <div className='my-notes'>\n            <h1 className='title my-title'>{props.currentCategory}\n                {props.currentCategory !== '' ? \n                (<span className='icon ml-5'>\n                    <i onClick={() => props.removeCategory(props.currentCategory)} className='fa fa-trash'></i>\n                </span>) : <p>No Category Selected</p>}\n            </h1>\n            <div className='notes-area'>\n                {renderNotes()}\n                <button onClick={props.saveNotes} className='button is-link my-save-notes-button'>Save Notes</button>\n                <button onClick={() => props.addNote(props.currentCategory, 'New Note', 'Click the pencil to edit!')} \n                className='button is-primary my-add-note-button'>Create Note</button>\n            </div>\n        </div>\n    )\n}\n\nexport default Notes;","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React from 'react';\nimport './App.scss';\nimport Menu from './Components/Menu.js';\nimport Notes from './Components/Notes.js';\n\nclass App extends React.Component {\n  constructor(){\n    super();\n    this.state={\n      allNotes : {\n        General : []\n      },\n      selectedCategory : '',\n    };\n  }\n\n  componentDidMount = () => {\n    const allNotes = JSON.parse(localStorage.getItem('allNotes'));\n    if (allNotes) {\n      this.setState({\n        allNotes : allNotes,\n      })\n    }\n  }\n\n  addCategory = category => {\n    const allNotes = this.state.allNotes;\n    if (!allNotes[category]) {\n      allNotes[category] = [];\n    }\n    this.setState({\n      allNotes : allNotes,\n      selectedCategory : category,\n    })\n  }\n\n  switchCategory = category => {\n    this.setState({\n      selectedCategory : category,\n    })\n  }\n\n  removeCategory = category => {\n    const sure = window.confirm(\"Are you sure you want to delete this category along with all of its notes?\");\n    if (sure) {\n      const allNotes = this.state.allNotes;\n      delete allNotes[category];\n      this.setState({\n        notes : allNotes,\n        selectedCategory : '',\n      })\n    }\n  }\n\n  addNote = (category, subject, body) => {\n    const allNotes = this.state.allNotes;\n    if (allNotes[category]) {\n      allNotes[category].push([subject, body]); \n    } else {\n      alert('Please create/select a category first!');\n    }\n    this.setState({\n      allNotes : allNotes,\n    })\n  }\n\n  removeNote = (index) => {\n    const allNotes = this.state.allNotes;\n    if (index !== 0) {\n      allNotes[this.state.selectedCategory].splice(index, index);\n    } else {\n      allNotes[this.state.selectedCategory].shift();\n    }\n    this.setState({\n      allNotes : allNotes,\n    })\n  }\n\n  editNoteTitle = (index, value) => {\n    const allNotes = this.state.allNotes;\n    allNotes[this.state.selectedCategory][index][0] = value;\n    this.setState({\n      allNotes : allNotes,\n    })\n  }\n\n  editNoteText = (index, value) => {\n    const allNotes = this.state.allNotes;\n    allNotes[this.state.selectedCategory][index][1] = value;\n    this.setState({\n      allNotes : allNotes,\n    })\n  }\n\n  getNotes = () => {\n    const allNotes = this.state.allNotes;\n    const selectedNotes = []\n    if (allNotes[this.state.selectedCategory]) {\n      allNotes[this.state.selectedCategory].forEach(note => {\n        selectedNotes.push(note);\n      })\n    }\n    return selectedNotes;\n  }\n\n  saveNotes = () => {\n    const allNotes = this.state.allNotes;\n    localStorage.setItem('allNotes', JSON.stringify(allNotes));\n  }\n\n  render() {\n    return(\n      <div className=\"App\">\n        <Menu addCategory={this.addCategory} categories={Object.keys(this.state.allNotes)} switchCategory={this.switchCategory} />\n        <Notes notes={this.getNotes()} addNote={this.addNote} currentCategory={this.state.selectedCategory} removeNote={this.removeNote} editNoteTitle={this.editNoteTitle} editNoteText={this.editNoteText} removeCategory={this.removeCategory} saveNotes={this.saveNotes} />\n      </div>\n    )\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}