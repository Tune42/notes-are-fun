{"version":3,"sources":["Components/Menu.js","Components/Notes.js","App.js","index.js"],"names":["MenuItem","setActive","setState","activeState","setInactive","handleClick","e","preventDefault","props","switchCategory","text","state","className","this","onClick","onMouseEnter","onMouseLeave","React","Component","InputField","handleChange","value","target","handleSubmit","addCategory","onSubmit","type","onChange","Menu","categories","forEach","category","push","key","Math","random","renderCategories","Note","handleClickDelete","removeNote","index","titleEditToggle","editingTitle","title","titleInput","textEditToggle","editingText","editNoteText","textInput","handleTitleChange","handleTitleSubmit","editNoteTitle","handleTextChange","handleTextSubmit","maxLength","aria-label","Notes","currentCategory","removeCategory","notes","note","renderNotes","saveNotes","addNote","App","componentDidMount","allNotes","JSON","parse","localStorage","getItem","selectedCategory","window","confirm","subject","body","alert","splice","shift","getNotes","selectedNotes","setItem","stringify","General","Object","keys","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b2229051.chunk.js","sourcesContent":["/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React from 'react';\n\nclass MenuItem extends React.Component {\n    constructor() {\n        super();\n        this.state={\n            activeState : ''\n        }\n    }\n\n    setActive = () => {\n        this.setState({\n            activeState : 'is-active'\n        })\n    }\n\n    setInactive = () => {\n        this.setState({\n            activeState : ''\n        })\n    }\n\n    handleClick = (e) => {\n        e.preventDefault();\n        this.props.switchCategory(this.props.text);\n    }\n\n    render() {\n        return(\n            <li className={this.state.activeState}\n            onClick={this.handleClick}\n            onMouseEnter={this.setActive}\n            onMouseLeave={this.setInactive}>\n            <a>{this.props.text}</a></li>\n        )\n    }\n}\n\nclass InputField extends React.Component {\n    constructor(){\n        super()\n        this.state={\n            value : ''\n        }\n    }\n\n    handleChange = (e) => {\n        this.setState({\n            value : e.target.value\n        })\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        this.props.addCategory(this.state.value);\n        this.setState({\n            value : ''\n        })\n    }\n\n    render() {\n        return(\n            <div className='my-menu-input-field'>\n                <form onSubmit={this.handleSubmit}>\n                    <label className='has-text-white'>Add a Category:</label>\n                    <input type=\"text\" onChange={this.handleChange} value={this.state.value}\n                    className=\"input is-primary\" />\n                </form>\n            </div>\n        )\n    }\n}\n\nfunction Menu(props) {\n    const renderCategories = () => {\n        const categories = []\n        props.categories.forEach(category => {\n            categories.push(<MenuItem key={Math.random()} text={category} switchCategory={props.switchCategory} />)\n        })\n        return categories\n    }\n\n    return(\n        <div className='my-menu'>\n            <aside>\n                <p className=\"menu-label my-menu-label\">Categories</p>\n                <ul className=\"menu-list\">\n                    {renderCategories()}\n                </ul>\n            </aside>\n            <InputField addCategory={props.addCategory} />\n        </div>\n    )\n}\n\nexport default Menu;","import React from 'react';\n\nclass Note extends React.Component {\n    constructor(){\n        super();\n        this.state={\n            editingTitle : false,\n            editingText : false,\n            titleInput : '',\n            textInput : '',\n        }\n    }\n\n    handleClickDelete = (e) => {\n        e.preventDefault();\n        this.props.removeNote(this.props.index);\n    }\n\n    titleEditToggle = (e) => {\n        e.preventDefault();\n        const editingTitle = this.state.editingTitle;\n        if (this.props.title) {\n            this.setState({\n                titleInput : this.props.title,\n            })\n        }\n        this.setState({\n            editingTitle : !editingTitle,\n        })\n    }\n\n    textEditToggle = (e) => {\n        e.preventDefault();\n        const editingText = this.state.editNoteText;\n        if (this.props.text) {\n            this.setState({\n                textInput : this.props.text\n            })\n        }\n        this.setState({\n            editingText : !editingText\n        })\n    }\n\n    handleTitleChange = (e) => {\n        this.setState({\n            titleInput : e.target.value\n        })\n    }\n\n    handleTitleSubmit = (e) => {\n        e.preventDefault();\n        this.props.editNoteTitle(this.props.index, this.state.titleInput);\n    }\n\n    handleTextChange = (e) => {\n        this.setState({\n            textInput : e.target.value\n        })\n    }\n\n    handleTextSubmit = (e) => {\n        e.preventDefault();\n        this.props.editNoteText(this.props.index, this.state.textInput);\n    }\n\n    render() {\n        return(\n            <div className=''>\n                <article className=\"message is-primary my-note\">\n                    <div className=\"message-body has-text-black my-message\">\n                        <div className='level my-note-title'>\n                            {this.state.editingTitle ? (<form onSubmit={this.handleTitleSubmit}>\n                            <input type=\"text\" onChange={this.handleTitleChange} value={this.state.titleInput}\n                            className=\"input is-primary is-small\" maxLength={50} /></form>) : <p>{this.props.title}</p>}\n                            <div>\n                                <span className=\"icon\">\n                                    <i onClick={this.titleEditToggle} className=\"fa fa-edit\"></i>\n                                </span>\n                                <button onClick={this.handleClickDelete} className=\"delete\" aria-label=\"delete\"></button>\n                            </div>\n                        </div>\n                        {this.state.editingText ? (<textarea onChange={this.handleTextChange} value={this.state.textInput}\n                        className=\"input is-primary my-text-field\" />) : this.props.text}\n                        <p>\n                            {!this.state.editingText ? \n                            (<span className='icon'>\n                                <i onClick={this.textEditToggle} className='fa fa-edit'></i>\n                            </span>) :\n                            (<span className='icon'>\n                                <i onClick={this.handleTextSubmit} className='fa fa-check'></i>\n                            </span>)}\n                        </p>\n                    </div>\n                </article>\n            </div>\n        )\n    }\n}\n\nfunction Notes(props) {\n    const renderNotes = () => {\n        const notes = []\n        props.notes.forEach((note, index) => {\n            notes.push(\n                <Note key={Math.random()} index={index} title={note[0]} text={note[1]} \n                editNoteTitle={props.editNoteTitle} removeNote={props.removeNote}\n                editNoteText={props.editNoteText} />\n            )\n        })\n        return notes;\n    }\n\n    return(\n        <div className='my-notes'>\n            <h1 className='title my-title'>{props.currentCategory}\n                {props.currentCategory !== '' ? \n                (<span className='icon ml-5'>\n                    <i onClick={() => props.removeCategory(props.currentCategory)} className='fa fa-trash'></i>\n                </span>) : <p>No Category Selected</p>}\n            </h1>\n            <div className='notes-area'>\n                {renderNotes()}\n                <button onClick={props.saveNotes} className='button is-link my-save-notes-button'>Save Notes</button>\n                <button onClick={() => props.addNote(props.currentCategory, 'New Note', 'Click the pencil to edit!')} \n                className='button is-primary my-add-note-button'>Create Note</button>\n            </div>\n        </div>\n    )\n}\n\nexport default Notes;","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React from 'react';\nimport './App.scss';\nimport Menu from './Components/Menu.js';\nimport Notes from './Components/Notes.js';\n\nclass App extends React.Component {\n  constructor(){\n    super();\n    this.state={\n      allNotes : {\n        General : []\n      },\n      selectedCategory : '',\n    };\n  }\n\n  componentDidMount = () => {\n    const allNotes = JSON.parse(localStorage.getItem('allNotes'));\n    this.setState({\n      allNotes : allNotes,\n    })\n  }\n\n  addCategory = category => {\n    const allNotes = this.state.allNotes;\n    if (!allNotes[category]) {\n      allNotes[category] = [];\n    }\n    this.setState({\n      allNotes : allNotes,\n      selectedCategory : category,\n    })\n  }\n\n  switchCategory = category => {\n    this.setState({\n      selectedCategory : category,\n    })\n  }\n\n  removeCategory = category => {\n    const sure = window.confirm(\"Are you sure you want to delete this category along with all of its notes?\");\n    if (sure) {\n      const allNotes = this.state.allNotes;\n      delete allNotes[category];\n      this.setState({\n        notes : allNotes,\n        selectedCategory : '',\n      })\n    }\n  }\n\n  addNote = (category, subject, body) => {\n    const allNotes = this.state.allNotes;\n    if (allNotes[category]) {\n      allNotes[category].push([subject, body]); \n    } else {\n      alert('Please create/select a category first!');\n    }\n    this.setState({\n      allNotes : allNotes,\n    })\n  }\n\n  removeNote = (index) => {\n    const allNotes = this.state.allNotes;\n    if (index !== 0) {\n      allNotes[this.state.selectedCategory].splice(index, index);\n    } else {\n      allNotes[this.state.selectedCategory].shift();\n    }\n    this.setState({\n      allNotes : allNotes,\n    })\n  }\n\n  editNoteTitle = (index, value) => {\n    const allNotes = this.state.allNotes;\n    allNotes[this.state.selectedCategory][index][0] = value;\n    this.setState({\n      allNotes : allNotes,\n    })\n  }\n\n  editNoteText = (index, value) => {\n    const allNotes = this.state.allNotes;\n    allNotes[this.state.selectedCategory][index][1] = value;\n    this.setState({\n      allNotes : allNotes,\n    })\n  }\n\n  getNotes = () => {\n    const allNotes = this.state.allNotes;\n    const selectedNotes = []\n    if (allNotes[this.state.selectedCategory]) {\n      allNotes[this.state.selectedCategory].forEach(note => {\n        selectedNotes.push(note);\n      })\n    }\n    return selectedNotes;\n  }\n\n  saveNotes = () => {\n    const allNotes = this.state.allNotes;\n    localStorage.setItem('allNotes', JSON.stringify(allNotes));\n  }\n\n  render() {\n    return(\n      <div className=\"App\">\n        <Menu addCategory={this.addCategory} categories={Object.keys(this.state.allNotes)} switchCategory={this.switchCategory} />\n        <Notes notes={this.getNotes()} addNote={this.addNote} currentCategory={this.state.selectedCategory} \n        removeNote={this.removeNote} editNoteTitle={this.editNoteTitle} editNoteText={this.editNoteText} \n        removeCategory={this.removeCategory} saveNotes={this.saveNotes} />\n      </div>\n    )\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}